guides(
colour = guide_legend()
)
ggplot() +
# switched order - daily first
geom_point(data = df, mapping = aes(x = date, y = mean_airtemp,
colour = "lightblue"), shape = 16,
alpha = 0.5) +
# monthly second
geom_line(data = df_monthly, mapping = aes(x = date, y = month_airtemp,
colour = "black")) +
ggthemes::theme_base() +
labs(x = "Date", y = "Monthly Air Temperature (C)") +
guides(
colour = guide_legend()
)
ggplot() +
# switched order - daily first
geom_point(data = df, mapping = aes(x = date, y = mean_airtemp,
colour = "lightblue"), shape = 16,
alpha = 0.5) +
# monthly second
geom_line(data = df_monthly, mapping = aes(x = date, y = month_airtemp,
colour = "black")) +
ggthemes::theme_base() +
labs(x = "Date", y = "Monthly Air Temperature (C)") +
guides(
colour = guide_legend()
) +
# add in colour scale
scale_colour_identity(guide = "legend")
ggplot() +
# switched order - daily first
geom_point(data = df, mapping = aes(x = date, y = mean_airtemp,
colour = "lightblue"), shape = 16,
alpha = 0.5) +
# monthly second
geom_line(data = df_monthly, mapping = aes(x = date, y = month_airtemp,
colour = "black")) +
ggthemes::theme_base() +
labs(x = "Date", y = "Monthly Air Temperature (C)") +
guides(
colour = guide_legend()
) +
# add in colour scale
scale_colour_identity(guide = "legend",
name = "Measurement", # the title of the legend
breaks = c("black", "lightblue"), # the colours
labels = c("Monthly Mean", "Daily Mean") # legend labels
)
ggplot() +
# switched order - daily first
geom_point(data = df, mapping = aes(x = date, y = mean_airtemp,
colour = "lightblue"), shape = 16,
alpha = 0.5) +
# monthly second
geom_line(data = df_monthly, mapping = aes(x = date, y = month_airtemp,
colour = "black")) +
ggthemes::theme_base() +
labs(x = "Date", y = "Monthly Air Temperature (C)") +
guides(
colour = guide_legend()
) +
# add in colour scale
scale_colour_identity(guide = "legend",
name = "Measurement", # the title of the legend
breaks = c("black", "lightblue"), # the colours
labels = c("Monthly Mean", "Daily Mean") # legend labels
)
library(tidyverse)
library(lterdatasampler)
library(lubridate)
library(ggthemes)
df = lterdatasampler::arc_weather
# make sub-groups for the dates
df = df %>%
dplyr::rowwise() %>%
dplyr::mutate(
month = lubridate::month(date),
year = lubridate::year(date)
)
# make separate dataframe for monthly measurements
df_monthly = df %>%
dplyr::select(year, month, mean_airtemp) %>%
dplyr::group_by(year, month) %>%
dplyr::summarize(
month_airtemp = mean(mean_airtemp, na.rm = TRUE)
) %>%
# assume all days are the 15th of the month
dplyr::mutate(
day = 15
) %>%
# make single date
dplyr::mutate(
date = lubridate::make_date(year, month, day)
)
ggplot() +
# switched order - daily first
geom_point(data = df, mapping = aes(x = date, y = mean_airtemp,
colour = "lightblue"), shape = 16,
alpha = 0.5) +
# monthly second
geom_line(data = df_monthly, mapping = aes(x = date, y = month_airtemp,
colour = "black")) +
ggthemes::theme_base() +
labs(x = "Date", y = "Monthly Air Temperature (C)") +
guides(
colour = guide_legend()
) +
# add in colour scale
scale_colour_identity(guide = "legend",
name = "Measurement", # the title of the legend
breaks = c("black", "lightblue"), # the colours
labels = c("Monthly Mean", "Daily Mean") # legend labels
)
library(tidyverse)
# add in an option to keep dplyr quiet
options(dplyr.summarise.inform = FALSE)
library(lterdatasampler)
library(lubridate)
library(ggthemes)
df = lterdatasampler::arc_weather
# make sub-groups for the dates
df = df %>%
dplyr::rowwise() %>%
dplyr::mutate(
month = lubridate::month(date),
year = lubridate::year(date)
)
# make separate dataframe for monthly measurements
df_monthly = df %>%
dplyr::select(year, month, mean_airtemp) %>%
dplyr::group_by(year, month) %>%
dplyr::summarize(
month_airtemp = mean(mean_airtemp, na.rm = TRUE)
) %>%
# assume all days are the 15th of the month
dplyr::mutate(
day = 15
) %>%
# make single date
dplyr::mutate(
date = lubridate::make_date(year, month, day)
)
ggplot() +
# switched order - daily first
geom_point(data = df, mapping = aes(x = date, y = mean_airtemp,
colour = "lightblue"), shape = 16,
alpha = 0.5) +
# monthly second
geom_line(data = df_monthly, mapping = aes(x = date, y = month_airtemp,
colour = "black")) +
ggthemes::theme_base() +
labs(x = "Date", y = "Monthly Air Temperature (C)") +
guides(
colour = guide_legend()
) +
# add in colour scale
scale_colour_identity(guide = "legend",
name = "Measurement", # the title of the legend
breaks = c("black", "lightblue"), # the colours
labels = c("Monthly Mean", "Daily Mean") # legend labels
)
df <- lterdatasampler::arc_weather
View(df)
df_long <- df %>%
# remove columns we don't need
dplyr::select(-c(station, mean_windspeed)) %>%
dplyr::pivot_longer(
cols = c(mean_airtemp, daily_precip)
)
df_long <- df %>%
# remove columns we don't need
dplyr::select(-c(station, mean_windspeed)) %>%
tidyr::pivot_longer(
cols = c(mean_airtemp, daily_precip)
)
View(df_long)
df_long <- df %>%
# remove columns we don't need
dplyr::select(-c(station, mean_windspeed)) %>%
tidyr::pivot_longer(
cols = c(mean_airtemp, daily_precip),
names_to = "weather_var"
)
df_long
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = date, y = value))
df_longer <- df_longer %>%
dplyr::mutate(
year = lubridate::year(date),
month = lubridate::month(date)
)
df_long <- df_long %>%
dplyr::mutate(
year = lubridate::year(date),
month = lubridate::month(date)
)
df_long
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = month, y = value))
df_long = df_long %>%
dplyr::mutate(
month = as.factor(month)
)
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = month, y = value))
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = month, y = value,
colour = weather_var))
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = month, y = value)) +
labs(x = "Month", y = "Weather Variable") +
ggthemes::theme_base()
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = month, y = value,
colour = weather_var)) +
labs(x = "Month", y = "Weather Variable") +
ggthemes::theme_base()
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = month, y = value,
colour = weather_var)) +
labs(x = "Month", y = "Weather Variable") +
ggthemes::theme_base() +
facet_wrap(~weather_var)
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = month, y = value,
colour = weather_var)) +
labs(x = "Month", y = "Weather Variable") +
ggthemes::theme_base() +
facet_wrap(~weather_var,
# I want this to be one column with two rows
ncol = 1)
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = month, y = value,
colour = weather_var)) +
labs(x = "Month", y = "Weather Variable") +
ggthemes::theme_base() +
facet_wrap(~weather_var,
# I want this to be one column with two rows
ncol = 1,
scales = "free")
df <- lterdatasampler::luq_streamchem
View(df)
df
df_long <- df %>%
# remove columns we don't need
dplyr::select(sample_date, na, k) %>%
tidyr::pivot_longer(
# specify which columns to join together
cols = c(na, k),
# specify what the new name of the grouping variable will be
names_to = "element"
)
df_long
df_long <- df_long %>%
dplyr::mutate(
year = lubridate::year(date),
month = lubridate::month(date)
)
df_long <- df_long %>%
dplyr::mutate(
year = lubridate::year(sample_date),
month = lubridate::month(sample_date)
)
df_long
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = year, y = value))
df_long = df_long %>%
dplyr::mutate(
year = as.factor(year)
)
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = month, y = value))
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = year, y = value))
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = year, y = value,
colour = element))
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = year, y = value,
colour = element)) +
labs(x = "Month", y = "Amount of Element") +
ggthemes::theme_base()
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = year, y = value,
colour = element)) +
labs(x = "Month", y = "Amount of Element (mg/L)") +
ggthemes::theme_base()
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = month, y = value,
colour = weather_var)) +
labs(x = "Year", y = "Amount of Element (mg/L)") +
ggthemes::theme_base() +
facet_wrap(~element,
# I want this to be one column with two rows
ncol = 1)
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = month, y = value,
colour = element)) +
labs(x = "Year", y = "Amount of Element (mg/L)") +
ggthemes::theme_base() +
facet_wrap(~element,
# I want this to be one column with two rows
ncol = 1)
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = year, y = value,
colour = element)) +
labs(x = "Year", y = "Amount of Element (mg/L)") +
ggthemes::theme_base() +
facet_wrap(~element,
# I want this to be one column with two rows
ncol = 1)
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = month, y = value,
colour = weather_var)) +
labs(x = "Month", y = "Weather Variable") +
ggthemes::theme_base() +
facet_wrap(~weather_var,
# I want this to be one column with two rows
ncol = 1,
scales = "free")
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = year, y = value,
colour = element)) +
labs(x = "Month", y = "Weather Variable") +
ggthemes::theme_base() +
facet_wrap(~element,
# I want this to be one column with two rows
ncol = 1,
scales = "free")
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = year, y = value,
fill = element)) +
labs(x = "Month", y = "Weather Variable") +
ggthemes::theme_base() +
facet_wrap(~element,
# I want this to be one column with two rows
ncol = 1,
scales = "free")
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = year, y = value,
fill = element, alpha = 0.2)) +
labs(x = "Month", y = "Weather Variable") +
ggthemes::theme_base() +
facet_wrap(~element,
# I want this to be one column with two rows
ncol = 1,
scales = "free")
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = year, y = value,
fill = element)) +
labs(x = "Month", y = "Weather Variable") +
ggthemes::theme_base() +
facet_wrap(~element,
# I want this to be one column with two rows
ncol = 1,
scales = "free")
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = year, y = value,
colour = element)) +
labs(x = "Year", y = "Amount of Element (mg/L)") +
ggthemes::theme_base() +
facet_wrap(~element,
# I want this to be one column with two rows
ncol = 1,
scales = "free")
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = year, y = value,
fill = element)) +
labs(x = "Year", y = "Amount of Element (mg/L)") +
ggthemes::theme_base() +
facet_wrap(~element,
# I want this to be one column with two rows
ncol = 1,
scales = "free")
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = year, y = value,
fill = element)) +
labs(x = "Year", y = "Amount of Element (mg/L)") +
ggthemes::theme_base() +
facet_wrap(~element,
# I want this to be one column with two rows
ncol = 1,
scales = "free") +
scale_fill_manual(values = c("#90ee90", "#F8E473"))
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = year, y = value,
fill = element)) +
labs(x = "Year", y = "Amount of Element (mg/L)") +
ggthemes::theme_base() +
facet_wrap(~element,
# I want this to be one column with two rows
ncol = 1,
scales = "free") +
scale_fill_manual("Element",
values = c("#90ee90", "#F8E473"),
labels = c("Potassium (K)",
"Sodium (Na)"))
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = year, y = value,
fill = element)) +
labs(x = "Year", y = "Amount of Element (mg/L)") +
ggthemes::theme_base() +
facet_wrap(~element,
# I want this to be one column with two rows
ncol = 1,
scales = "free",
labeller = labeller(c("Potassium (K)",
"Sodium (Na)"))) +
scale_fill_manual("Element",
values = c("#90ee90", "#F8E473"),
labels = c("Potassium (K)", "Sodium (Na)"))
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = year, y = value,
fill = element)) +
labs(x = "Year", y = "Amount of Element (mg/L)") +
ggthemes::theme_base() +
facet_wrap(~element,
# I want this to be one column with two rows
ncol = 1,
scales = "free",
labeller = labeller("k" = "Potassium (K)",
"na" = "Sodium (Na)")) +
scale_fill_manual("Element",
values = c("#90ee90", "#F8E473"),
labels = c("Potassium (K)", "Sodium (Na)"))
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = year, y = value,
fill = element)) +
labs(x = "Year", y = "Amount of Element (mg/L)") +
ggthemes::theme_base() +
facet_wrap(~element,
# I want this to be one column with two rows
ncol = 1,
scales = "free",
labeller = labeller(`k` = "Potassium (K)",
`na` = "Sodium (Na)")) +
scale_fill_manual("Element",
values = c("#90ee90", "#F8E473"),
labels = c("Potassium (K)", "Sodium (Na)"))
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = year, y = value,
fill = element)) +
labs(x = "Year", y = "Amount of Element (mg/L)") +
ggthemes::theme_base() +
facet_wrap(~element,
# I want this to be one column with two rows
ncol = 1,
scales = "free",
labeller = as.labeller(`k` = "Potassium (K)",
`na` = "Sodium (Na)")) +
scale_fill_manual("Element",
values = c("#90ee90", "#F8E473"),
labels = c("Potassium (K)", "Sodium (Na)"))
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = year, y = value,
fill = element)) +
labs(x = "Year", y = "Amount of Element (mg/L)") +
ggthemes::theme_base() +
facet_wrap(~element,
# I want this to be one column with two rows
ncol = 1,
scales = "free",
labeller = as.labeller(c(`k` = "Potassium (K)",
`na` = "Sodium (Na)"))) +
scale_fill_manual("Element",
values = c("#90ee90", "#F8E473"),
labels = c("Potassium (K)", "Sodium (Na)"))
ggplot() +
geom_boxplot(data = df_long, mapping = aes(x = year, y = value,
fill = element)) +
labs(x = "Year", y = "Amount of Element (mg/L)") +
ggthemes::theme_base() +
facet_wrap(~element,
# I want this to be one column with two rows
ncol = 1,
scales = "free",
labeller = as_labeller(c(`k` = "Potassium (K)",
`na` = "Sodium (Na)"))) +
scale_fill_manual("Element",
values = c("#90ee90", "#F8E473"),
labels = c("Potassium (K)", "Sodium (Na)"))
library(tidyverse)
library(lterdatasampler)
df <- lterdatasampler::luq_streamchem %>%
# remove columns we don't need
dplyr::select(sample_date, na, k) %>%
tidyr::pivot_longer(
# specify which columns to join together
cols = c(na, k),
# specify what the new name of the grouping variable will be
names_to = "element"
) %>%
dplyr::mutate(
year = lubridate::year(sample_date),
month = lubridate::month(sample_date)
)
ggplot() +
geom_boxplot(data = df, mapping = aes(x = year, y = value,
fill = element)) +
labs(x = "Year", y = "Amount of Element (mg/L)") +
ggthemes::theme_base() +
facet_wrap(~element,
# I want this to be one column with two rows
ncol = 1,
scales = "free",
labeller = as_labeller(c(`k` = "Potassium (K)",
`na` = "Sodium (Na)"))) +
scale_fill_manual("Element",
values = c("#90ee90", "#F8E473"),
labels = c("Potassium (K)", "Sodium (Na)"))
