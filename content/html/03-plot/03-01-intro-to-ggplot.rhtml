<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Karma">
    <link rel="stylesheet" href="../highlight/styles/default.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="../css/stylesheet.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/katex.min.css" integrity="sha384-zB1R0rpPzHqg7Kpt0Aljp8JPLqbXI3bhnPWROx27a9N0Ll6ZP/+DiW/UqRcLbRjq" crossorigin="anonymous">
    <script defer src="https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/katex.min.js" integrity="sha384-y23I5Q6l+B6vatafAwxRu/0oK/79VlbSz7Q9aiSZUvyWYIYsd+qj+o24G5ZU2zJz" crossorigin="anonymous"></script>
    <script defer src="https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/contrib/auto-render.min.js" integrity="sha384-kWPLUVMOks5AQFrykwIup5lo0m3iMkkHrD0uJ4H5cjeGihAutqP0yW0J6dpFiVkI" crossorigin="anonymous" onload="renderMathInElement(document.body);"></script>
    <script src="../highlight/highlight.js"></script>
    <script src="../functions.js"></script>
    <script>hljs.highlightAll();</script>
    <script> 
    $(function(){
    $("#header").load("../common/head.html"); 
    });
    </script> 
</head>
<body>
  <!--Add in the header-->
  <div id="header"></div>

<main style = margin-top:100px>
    <nav class="section-nav">
        <ol>
          <li><a href="#intro">Intro to <code>ggplot2</code></a>
            <ul>
              <li class=""><a href="#intro--components">Plot Components</a></li>
            </ul>
          </li>
        </ol>
      </nav>
    <div>
      <section id="intro">
        <h2>Introduction to the <code>ggplot2</code> Package</h2>
        <p>
            <!--begin.rcode, echo=FALSE
            options(tidyverse.quiet = TRUE)
            end.rcode-->

            One way to plot in R, is to use the <code>ggplot2</code> package in the Tidyverse. "gg" stands for the "Grammar of Graphics" and the package makes for a convenient and consistent way to make almost any plot you want. Typically it's easiest to plot data in <code>ggplot2</code> using a dataframe, which means we usually don't need to make major changes to our data if we decide we want to change how we're plotting something in particular. 
        </p>
        </section>
        <section id="intro--components">
          <h3>Components of a Good Plot</h3>
            <p>
                The function used to make a plot is <code>ggplot()</code>. This comes from the <code>ggplot2</code> package. As a reminder, first using the <code>ggplot2</code> package we have to install it (just the first time we use it!) with <code>install.packages("ggplot2")</code> and then for every time after that we want it, we don't need to re-install it, we just need to call the package at the beginning of our script with <code>library(ggplot2)</code>. <br><br> There is a consistent template that we'll need to use to get our plots to work:
                <br><br>
                <code>
                ggplot(data = &lt;DATA>, <br>&emsp;
                    mapping = aes(&ltMAPPINGS>)) +<br>&emsp;
                    &ltGEOM_FUNCTION>()
                </code>

                <br><br>
                Here we have three main components:
                <br><br>
                * <em>the data call</em> - this will almost always refer to a dataframe 
                <br><br>
                * <em>the aesthetic mappings</em> - these are the variables we're plotting, and the specifications of how we want them to be displayed
                <br><br>
                * <em>the geom function</em> - each type of plot has it's own geom function (i.e. <code>geom_point()</code> for a scatterplot, <code>geom_line()</code> to plot timeseries, etc.)
                <br><br>
                A small point, note here that unlike other Tidyverse packages, we do not use the pipe <code>%>%</code> to link different functions, we use an addition operator <code>+</code>. 
                <br><br>
                By way of a quick example, we'll make a super quick and dirty scatterplot of some long-term ecological data on salamanders and trout. 
                </p>
                <!--begin.rcode
                library(tidyverse)
                library(lterdatasampler)

                df <- lterdatasampler::and_vertebrates

                names(df)
                end.rcode-->
                <p>
                The most basic version of the plot we may want to make is a scatter plot of two continuous variables, let's say length and weight: 
                </p>
                <!--begin.rcode, warning=FALSE
                ggplot() +
                geom_point(data = df, aes(x = length_1_mm, y = weight_g))
                end.rcode-->
                <p>
                Here you notice we place the aesthetics arguments (<code>mapping = aes()</code>) in each <code>geom</code> argument individually. This will allow us to plot using multiple dataframes or variables. 
                </p>
                <p>
                In the <a href="./03-02-interative-plotting.html">Iterative Plotting</a> section we'll go over how to add components to go from an ugly plot like this to a publication-ready graphic. 
            </p>
        </section>
<!-- End page content -->
<hr>
<p style="font-size:10px;color:gray;text-align:center">
    <br>
    <br>
    The EEB R Manual is the work of researchers at the University of the Toronto
     and intended as a purely educational resource. It holds no official 
    association with the R Foundation. It should not be taken as an
     authority on R best practices. 
    <br>
    When using this resource, <bold>always</bold> default to instructions and 
    guidance provided by your instructor. 
    <br>
    This content is reviewed regularly for errors and to make improvements, if you see an error and want to help us make this better, see the Contact Page
</p>
</div>
</main>
</body>
</html>
