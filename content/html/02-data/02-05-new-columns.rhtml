<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Karma">
    <link rel="stylesheet" href="../highlight/styles/default.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="../css/stylesheet.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/katex.min.css" integrity="sha384-zB1R0rpPzHqg7Kpt0Aljp8JPLqbXI3bhnPWROx27a9N0Ll6ZP/+DiW/UqRcLbRjq" crossorigin="anonymous">
    <script defer src="https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/katex.min.js" integrity="sha384-y23I5Q6l+B6vatafAwxRu/0oK/79VlbSz7Q9aiSZUvyWYIYsd+qj+o24G5ZU2zJz" crossorigin="anonymous"></script>
    <script defer src="https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/contrib/auto-render.min.js" integrity="sha384-kWPLUVMOks5AQFrykwIup5lo0m3iMkkHrD0uJ4H5cjeGihAutqP0yW0J6dpFiVkI" crossorigin="anonymous" onload="renderMathInElement(document.body);"></script>
    <script src="../highlight/highlight.js"></script>
    <script src="../functions.js"></script>
    <script>hljs.highlightAll();</script>
</head>
<body>
	<div class="topnav">
		<a class="a-top w3-center" href="../index.html">The R Manual</a>
        <a class="a-mid" href="../about.html">About</a>
        <a class="a-mid" href="../contact.html">Contact</a>
        <a class="a-top w3-center" style="float:right;" href="https://eeb.utoronto.ca/">EEB</a>
	</div>
	<div class="bottomnav navbar">
        <div class="dropdown">
            <button class="dropbtn">Getting Started</button>
            <div class="dropdown-content" style="float:auto">
              <a href="../00-landingpage.html" class="a-first">Getting Started Home</a>
              <a href="../00-start/00-01-downloads.html">Downloading R & RStudio</a>
              <a href="../00-start/00-02-navigating-rstudio.html">Navigating R Studio</a>
              <a href="../00-start/00-03-the-file-ecosystem.html">The File Ecosystem</a>
            </div>
        </div> 
        <div class="dropdown">
            <button class="dropbtn">Basic R</button>
            <div class="dropdown-content" style="float:auto">
              <a href="../01-landingpage.html" class="a-first">Basic R Home</a>
              <a href="../01-basicr/01-01-coding-basics.html">Coding Basics</a>
              <a href="../01-basicr/01-02-data-types.html">Data Types</a>
              <a href="../01-basicr/01-03-data-structures.html">Data Structures</a>
              <a href="../01-basicr/01-04-indexing.html">Indexing</a>
              <a href="../01-basicr/01-05-packages.html">Packages</a>
              <a href="../01-basicr/01-06-workflow.html">Workflow</a>
            </div>
          </div> 
          <div class="dropdown">
            <button class="dropbtn">Working With Data</button>
            <div class="dropdown-content" style="float:auto">
              <a href="../02-landingpage.html" class="a-first">Working With Data Home</a>
              <a href="../02-data/02-01-reading-writing.html">Reading &amp; Writing</a>
              <a href="../02-data/02-02-filtering-subsetting.html">Filtering &amp; Subsetting</a>
              <a href="../02-data/02-03-selecting-columns.html">Selecting Columns</a>
              <a href="../02-data/02-04-grouping-summarizing.html">Grouping &amp; Summarizing</a>
              <a href="../02-data/02-05-new-columns.html">New Columns</a>
              <a href="../02-data/02-06-factors.html"><strong style="color:#8B0000">Special Type:</strong> Factors</a>
              <a href="../02-data/02-07-renaming.html"><strong style="color:#8B0000">Special Type:</strong> Dates</a>
              <a href="../02-data/02-08-dates.html">Renaming Columns</a>
              <a href="../02-data/02-09-reshaping.html">Reshaping Data</a>
              <a href="../02-data/02-10-cleaning-process.html">Data Cleaning Process</a>
              <a href="../02-data/02-11-relational-data.html">Relational Data</a>
            </div>
          </div> 
          <div class="dropdown">
            <button class="dropbtn">Plotting</button>
            <div class="dropdown-content" style="float:auto">
              <a href="../03-landingpage.html" class="a-first">Plotting Home</a>
              <a href="../03-plot/03-00-basics-of-plotting.html">Basics of Plotting</a>
              <a href="../03-plot/03-01-intro-to-ggplot.html">Introduction to <code>ggplot2</code></a>
              <a href="../03-plot/03-02-interative-plotting.html">Interative Plotting</a>
              <a href="../03-plot/03-03-facetting.html">Facetting &amp; Grids</a>
              <a href="../03-plot/03-04-plotting-multiple-dataframes.html">Plotting Multiple DataFrames</a>
              <a href="../03-plot/03-05-distributions.html">Plotting Distributions</a>
              <a href="../03-plot/03-06-part-to-whole-comparison.html">Part to Whole Comparison</a>
              <a href="../03-plot/03-07-relations-between-vars.html">Relationships Between Variables</a>
              <a href="../03-plot/03-08-change-time.html">Changes in Time</a>
              <a href="../03-plot/03-10-values-between-groups.html">Values Between Groups</a>
              <a href="../03-plot/03-11-mapping.html">Geographical Mapping</a>
              <a href="../03-plot/03-12-annotations.html">Annotations</a>
              <a href="../03-plot/03-13-phylogenetic-trees.html">Phylogenetic Trees</a>
            </div>
          </div> 
          <div class="dropdown">
            <button class="dropbtn">Statistics in R</button>
            <div class="dropdown-content" style="float:auto">
              <a href="../04-landingpage.html" class="a-first">Statistics in R Home</a>
              <a href="../04-stats1/04-00-introduction.html">An Introduction</a>
              <a href="../04-stats1/04-01-probability-101.html">Probability 101</a>
              <a href="../04-stats1/04-03-sampling-distributions.html">Sampling Distributions</a>
              <a href="../04-stats1/04-04-hypothesis-testing.html">Hypothesis Testing</a>
              <a href="../04-stats1/04-05-confidence-intervals.html">Confidence Intervals</a>
              <a href="../04-stats1/04-06-comparing-sample-means.html">Comparing Sample Means</a>
              <a href="../04-stats1/04-07-analysis-of-variance.html">Analysis of Variance</a>
              <a href="../04-stats1/04-08-linear-regression.html">Linear Regression</a>
              <a href="../04-stats1/04-09-logistic-regression.html">Logistic Regression</a>
              <a href="../04-stats1/04-10-generalized-regression.html">Generalized Regression</a>
            </div>
          </div> 
	</div>

<main style = margin-top:100px>
    <nav class="section-nav">
        <ol>
          <li><a href="#mut">Mutating Columns</a>
            <ul>
              <li class=""><a href="#mut--single">Single Values</a></li>
              <li class=""><a href="#mut--exist">Based on Existing Columns</a>
              <ul>
                <li class=""><a href="#mut--exist--one">Function or Test</a></li>
                <li class=""><a href="#mut--exist--two">Binding Columns</a></li>
              </ul>
            </li>
            </ul>
          </li>
        </ol>
      </nav>
    <div>
      <section id="">
        <h2>Making New Columns</h2>
            <!--begin.rcode, echo=FALSE
            options(tidyverse.quiet = TRUE)
            end.rcode-->
<p>
            While summarizing columns is useful if we want to pare down our dataframe and get a summary, it's often the case we actually just want to add a new column to our dataframe, perhaps based on some set of other columns already in our dataframe. 

            In Tidy R, we will almost always use <code>dplyr::mutate()</code> for this task. 
        </p>
        </section>
        <section id="mut">
            <h3>Mutating Columns</h3>
            <section id="mut--single">
                <h4>Single Values</h4>
                <p>
                    The simplest use of <code>mutate()</code> is to make a new column that is made up of either a pre-existing object or a single value. For examples here, let's turn to a long-term dataset - sugar maple seedlings at Hubbard Brook Experimental Forest. 
                    </p>
                    <!--begin.rcode
                    library(tidyverse)
                    library(lterdatasampler)
                    df = lterdatasampler::hbr_maples
                    head(df)
                    end.rcode-->
                    <p>
                    For this example, we only will work with some of the variables, so let's first select the columns we want <a href="./02-03-selecting-columns.html">(See more on selection here)</a>. 
                    </p>
                    <!--begin.rcode
                    df <- df %>% 
                    dplyr::select(year, watershed, elevation, leaf1area, 
                                    leaf2area, corrected_leaf_area)
                    df
                    end.rcode-->
                    <p>
                    We could for example, want a column in this dataset that tells us what forest these data are from. That would be an easy use of the <code>mutate()</code> function as there's only one value. We could do this like so:
                    </p>
                    <!--begin.rcode
                    df <- df %>% 
                    dplyr::mutate(forest = "HBEF")
                    df
                    end.rcode-->
                    <p>
                    And we see that our new column has been added onto the far right of the dataframe. 
                </p>
            </section>
            <section id="mut--exist">
                <h4>Mutating Columns as a Function of Existing Columns</h4>
                <p>
                    A more common use case is if we want to make a new column from existing columns. Two typical uses here would be:
                    <br><br>

                    1. Making a new column that is made via a function operating on another column(s)
                    <br><br>
                    2. Making a factor column that binds together values from other columns 
                </p>
                <section id="mut--exist--one">
                    <h5>New column Via Numeric Function or Logical Test</h5>
                    <h6><strong>Rowwise Functions</strong></h6>
                    <p>
                        In these data, there are two measures of leaf area: <code>leaf1area</code> and <code>leaf2area</code>. While they're both very similar, it might still be useful to have a mean estimate for each observation in the data between the two leaf area measurements. 
                        <br><br>
                        Say we wanted to calculate for row, the mean value of the two measures of leaf area. <strong>To make this operation on a row-wise basis, we can use <code>dplyr::rowwise()</code></strong> which will ensure each calculation is done on a single row. Combining this with <code>mutate()</code> will produce our desired result. 
                        </p>
                        <!--begin.rcode
                        df <- df %>% 
                        dplyr::rowwise() %>%  # ensures calculation done for each row
                        dplyr::mutate(
                            mean_area = mean(c(leaf1area, leaf2area), na.rm = TRUE)
                        )
                        df
                        end.rcode-->
                        <p>
                        Now, again, we have our new column tacked on at the end of our dataframe just as we wanted. 
                        <br><br>
                        Since we have now a mean estimate of leaf area, we might want to compare that to our measure of <code>corrected_leaf_area</code>. We might want, for instance, to see if the <code>corrected_leaf_area</code> is a consistent proportion larger than the mean of the two leaf area measurements.
                        <br><br>
                        To go about this, we might want to get a ratio of the <code>mean_area</code> and the <code>corected_leaf_area</code> for each row. To do so, we can create an operation very similarly to above: 
                        </p>
                        <!--begin.rcode
                        df <- df %>% 
                        dplyr::rowwise() %>%  # we still need this to get a value for each row
                        dplyr::mutate(
                            corrected_mean_ratio = mean_area / corrected_leaf_area
                        )
                        df
                        end.rcode-->
                    <h6><code>ifelse()</code></h6>
                    <p>
                        A handy component of <code>mutate()</code> is that we can create a new column based on a conditional statement like an <code>ifelse()</code> statement <a href="../06-landingpage.html">(see more on this here)</a>. In the <code>corrected_leaf_area</code> column, we may want to know if a particular value falls above or below the mean value for all of our observations. We could create a simple categorical variable based on this for each row with an <code>ifelse()</code> statement. 
                        </p>
                        <!--begin.rcode
                        # overall mean 
                        mean_val <- mean(df$corrected_leaf_area, na.rm = TRUE)

                        # make new column
                        df <- df %>% 
                        # still need to rowwise the calculation
                        dplyr::rowwise() %>% 
                        dplyr::mutate(
                            # we specify we want this as a factor 
                            corrected_above_below = as.factor(ifelse(
                            # this is the logical test
                            corrected_leaf_area > mean_val,
                            # value if test is TRUE
                            "Above", 
                            # value if test is FALSE
                            "Below"
                            ))
                        )
                        df
                        end.rcode-->
                </section>
                <section id="mut--exist--two"> 
                    <h5>Binding Columns</h5>
                    <p>
                        While this is a less common use case, it is often handy to make a new column grouping variable that is informative and can be made for each row. For example, say we wanted to have some way to group our observations by three components: the year the data were collected (2003 vs. 2004), the watershed (reference vs. w1), and elevation (low or mid). In this toy example, we'll do this by pasting those elements together in a new row-wise column. 
                        <br><br>
                        First, let's take a look at the summaries of each of these columns: 
                        </p>
                        <!--begin.rcode
                        summary(df$year)
                        end.rcode-->
                        <!--begin.rcode
                        summary(df$watershed)
                        end.rcode-->
                        <!--begin.rcode
                        summary(df$elevation)
                        end.rcode-->
                        <p>
                        Importantly, it looks like there are some NA's in the elevation column. For our purposes, we'll want to keep those around as there are many observations that have NA's and we don't want to throw those all away. 
                        <br><br>
                        Now, let's perform our calculation: 
                        </p>
                        <!--begin.rcode
                        df <- df %>% 
                        dplyr::rowwise() %>% 
                        dplyr::mutate(
                            # we can use paste() from base R to paste the characters together
                            group = as.factor(paste(year, 
                                        watershed, 
                                        elevation, 
                                        sep = "_")) # we want each component separated by a "_"
                        )
                        df
                        end.rcode-->
                        <p>
                        Now we can see how many unique combinations of these three variables there are: 
                        </p>
                        <!--begin.rcode
                        table(df$group)
                        end.rcode-->
                        <p>
                        We see that the observations are spread almost perfectly across the six different groups. 
                    </p>
                </section>
            </section>
        </section>
<!-- End page content -->
<hr>
<p style="font-size:10px;color:gray;text-align:center">
    <br>
    <br>
    The EEB R Manual is the work of researchers at the University of the Toronto
     and intended as a purely educational resource. It holds no official 
    association with the R Foundation. It should not be taken as an
     authority on R best practices. 
    <br>
    When using this resource, <bold>always</bold> default to instructions and 
    guidance provided by your instructor. 
    <br>
    This content is reviewed regularly for errors and to make improvements, if you see an error and want to help us make this better, see the Contact Page
</p>
</div>
</main>
</body>
</html>